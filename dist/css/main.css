html{font-size:20px}*{-webkit-box-sizing:border-box;box-sizing:border-box;margin:0;padding:0}img{margin:0;padding:0;width:100%}li{list-style:none;color:#fff}a{text-decoration:none;color:#fff}.noselect{-webkit-touch-callout:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.container{max-width:1560px;margin:0 auto;padding-left:30px;padding-right:30px;position:relative;overflow:hidden}.firstExample{background-color:rgba(230,64,64,.699);padding:40px 0;width:100%;height:100vh}.firstExample__slider{position:relative;margin:0 auto}.GnativeCarousel__staticItem{position:absolute;top:0;border-radius:45px;background-color:rgba(85,85,85,.445);-webkit-box-shadow:0 0 40px 5px rgba(85,85,85,.788);box-shadow:0 0 40px 5px rgba(85,85,85,.788);width:340px;height:710px}.GnativeCarousel__itemsContainer{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;position:absolute;top:0;width:100%;height:100%}.GnativeCarousel__itemsContainer img{position:absolute;border-radius:30px;width:320px;height:645px}.GnativeCarousel__buttons{position:absolute;top:50%;left:10%;width:80%;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-transform:translate(0,-50%);transform:translate(0,-50%)}.GnativeCarousel__button{display:inline-block;background-color:red;width:82px;height:82px;border-radius:50%;text-align:center;cursor:pointer;-webkit-transition:background-color .2s,-webkit-box-shadow .2s;transition:box-shadow .2s,background-color .2s,-webkit-box-shadow .2s}.GnativeCarousel__button:hover{-webkit-box-shadow:0 0 10px 1px #555151;box-shadow:0 0 10px 1px #555151}.GnativeCarousel__button:active{-webkit-box-shadow:none;box-shadow:none;background-color:rgba(219,25,25,.486)}.GnativeCarousel__button svg{fill-opacity:0;stroke:#fff;stroke-width:4px;stroke-opacity:1;width:50px;height:25px;margin-top:50%;-webkit-transform:translate(0,-50%);transform:translate(0,-50%)}@media screen and (max-width:1100px){.firstExample__slider{width:584px;height:512px}.GnativeCarousel__staticItem{width:245px;height:512px}.GnativeCarousel__itemsContainer img{width:231px;height:465px}}@media screen and (max-width:960px){.firstExample__slider{width:730px;height:640px}.GnativeCarousel__staticItem{width:306px;height:640px}.GnativeCarousel__itemsContainer img{width:288px;height:581px}}@media screen and (max-width:768px){.container{padding-left:15px;padding-right:15px}.firstExample__slider{width:95vw;height:83.3vw}.GnativeCarousel__staticItem{width:39.8vw;height:83.3vw}.GnativeCarousel__itemsContainer img{width:37.5vw;height:75.6vw}}@media screen and (max-width:560px){.container{padding-left:15px;padding-right:15px}.GnativeCarousel__buttons{width:90%;left:5%}}@media screen and (max-width:420px){.container{padding-left:15px;padding-right:15px}.GnativeCarousel__buttons{display:none}.GnativeCarousel__button{width:60px;height:60px}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
